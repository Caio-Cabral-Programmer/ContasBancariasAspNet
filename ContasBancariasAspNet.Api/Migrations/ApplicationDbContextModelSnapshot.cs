// <auto-generated />
using System;
using ContasBancariasAspNet.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContasBancariasAspNet.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContasBancariasAspNet.Api.Models.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Agency")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(13,2)");

                    b.Property<decimal>("Limit")
                        .HasColumnType("decimal(13,2)")
                        .HasColumnName("additional_limit");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("tb_account");
                });

            modelBuilder.Entity("ContasBancariasAspNet.Api.Models.Card", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Limit")
                        .HasColumnType("decimal(13,2)")
                        .HasColumnName("available_limit");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("varchar(16)");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("tb_card");
                });

            modelBuilder.Entity("ContasBancariasAspNet.Api.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CardId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique()
                        .HasFilter("[AccountId] IS NOT NULL");

                    b.HasIndex("CardId")
                        .IsUnique()
                        .HasFilter("[CardId] IS NOT NULL");

                    b.ToTable("tb_user");
                });

            modelBuilder.Entity("ContasBancariasAspNet.Api.Models.User", b =>
                {
                    b.HasOne("ContasBancariasAspNet.Api.Models.Account", "Account")
                        .WithOne("User")
                        .HasForeignKey("ContasBancariasAspNet.Api.Models.User", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ContasBancariasAspNet.Api.Models.Card", "Card")
                        .WithOne("User")
                        .HasForeignKey("ContasBancariasAspNet.Api.Models.User", "CardId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Account");

                    b.Navigation("Card");
                });

            modelBuilder.Entity("ContasBancariasAspNet.Api.Models.Account", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("ContasBancariasAspNet.Api.Models.Card", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
